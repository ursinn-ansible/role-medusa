---
- name: set vars
  set_fact:
    docker_image: '{{ role_medusa_image }}'
    docker_container: '{{ role_medusa_container }}'
    docker_puid: '{{ role_medusa_puid }}'
    docker_pgid: '{{ role_medusa_pgid }}'
    docker_tz: '{{ role_medusa_tz }}'
    docker_dir_config: '{{ role_medusa_dir }}/config'
    docker_dir_downloads: '{{ role_medusa_dir }}/downloads'
    docker_dir_tv: '{{ role_medusa_dir }}/tv'
    docker_network: '{{ role_medusa_network }}'

- name: Create config directory
  ansible.builtin.file:
    path: '{{ docker_dir_config }}'
    state: directory
    owner: '{{ docker_puid }}'
    group: '{{ docker_pgid }}'
    mode: 0755

- name: Create downloads directory
  ansible.builtin.file:
    path: '{{ docker_dir_downloads }}'
    state: directory
    owner: '{{ docker_puid }}'
    group: '{{ docker_pgid }}'
    mode: 0755

- name: Create tv directory
  ansible.builtin.file:
    path: '{{ docker_dir_tv }}'
    state: directory
    owner: '{{ docker_puid }}'
    group: '{{ docker_pgid }}'
    mode: 0755

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create network
  community.docker.docker_network:
    name: "{{ docker_network }}"
    driver_options:
          com.docker.network.bridge.name: "br-{{ docker_network }}"

- name: Create medusa container
  community.docker.docker_container:
    image: '{{ docker_image }}'
    volumes:
     - '{{ docker_dir_config }}:/config:Z'
     - '{{ docker_dir_downloads }}:/downloads:Z'
     - '{{ docker_dir_tv }}:/tv:Z'
    env:
      PUID: '{{ docker_puid }}'
      PGID: '{{ docker_pgid }}'
      TZ: '{{ docker_tz }}'
    name: "{{ docker_container }}"
    networks:
     - name: "{{ docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false
